//
// Created by john on 3/17/20.
//

#include <unordered_map>
#include "core-utils/glfw_keys.hpp"

namespace sero::core::utils {
    std::optional<Keys> glfw_key_to_sero(int value) noexcept {
        // forgive me
        // https://www.glfw.org/docs/3.3/group__keys.html#ga99aacc875b6b27a072552631e13775c7
        switch (value) {
            case 32:
                return Keys::SPACE;
            case 39:
                return Keys::APOSTROPHE;
            case 44:
                return Keys::COMMA;
            case 45:
                return Keys::MINUS;
            case 46:
                return Keys::PERIOD;
            case 47:
                return Keys::SLASH;
            case 48:
                return Keys::NUM_ZERO;
            case 49:
                return Keys::NUM_ONE;
            case 50:
                return Keys::NUM_TWO;
            case 51:
                return Keys::NUM_THREE;
            case 52:
                return Keys::NUM_FOUR;
            case 53:
                return Keys::NUM_FIVE;
            case 54:
                return Keys::NUM_SIX;
            case 55:
                return Keys::NUM_SEVEN;
            case 56:
                return Keys::NUM_EIGHT;
            case 57:
                return Keys::NUM_NINE;
            case 59:
                return Keys::SEMICOLON;
            case 61:
                return Keys::EQUAL;
            case 65:
                return Keys::A;
            case 66:
                return Keys::B;
            case 67:
                return Keys::C;
            case 68:
                return Keys::D;
            case 69:
                return Keys::E;
            case 70:
                return Keys::F;
            case 71:
                return Keys::G;
            case 72:
                return Keys::H;
            case 73:
                return Keys::I;
            case 74:
                return Keys::J;
            case 75:
                return Keys::K;
            case 76:
                return Keys::L;
            case 77:
                return Keys::M;
            case 78:
                return Keys::N;
            case 79:
                return Keys::O;
            case 80:
                return Keys::P;
            case 81:
                return Keys::Q;
            case 82:
                return Keys::R;
            case 83:
                return Keys::S;
            case 84:
                return Keys::T;
            case 85:
                return Keys::U;
            case 86:
                return Keys::V;
            case 87:
                return Keys::W;
            case 88:
                return Keys::X;
            case 89:
                return Keys::Y;
            case 90:
                return Keys::Z;
            case 91:
                return Keys::LEFT_BRACKET;
            case 92:
                return Keys::BACKSLASH;
            case 93:
                return Keys::RIGHT_BRACKET;
            case 96:
                return Keys::ACCENT_GRAVE;
            case 161:
                return Keys::WORLD_1;
            case 162:
                return Keys::WORLD_2;
            case 256:
                return Keys::ESCAPE;
            case 257:
                return Keys::ENTER;
            case 258:
                return Keys::TAB;
            case 259:
                return Keys::BACKSPACE;
            case 260:
                return Keys::INSERT;
            case 261:
                return Keys::DELETE;
            case 262:
                return Keys::RIGHT;
            case 263:
                return Keys::LEFT;
            case 264:
                return Keys::DOWN;
            case 265:
                return Keys::UP;
            case 266:
                return Keys::PAGE_UP;
            case 267:
                return Keys::PAGE_DOWN;
            case 268:
                return Keys::HOME;
            case 269:
                return Keys::END;
            case 280:
                return Keys::CAPS_LOCK;
            case 281:
                return Keys::SCROLL_LOCK;
            case 282:
                return Keys::NUM_LOCK;
            case 283:
                return Keys::PRINT_SCREEN;
            case 284:
                return Keys::PAUSE;
            case 290:
                return Keys::F1;
            case 291:
                return Keys::F2;
            case 292:
                return Keys::F3;
            case 293:
                return Keys::F4;
            case 294:
                return Keys::F5;
            case 295:
                return Keys::F6;
            case 296:
                return Keys::F7;
            case 297:
                return Keys::F8;
            case 298:
                return Keys::F9;
            case 299:
                return Keys::F10;
            case 300:
                return Keys::F11;
            case 301:
                return Keys::F12;
            case 302:
                return Keys::F13;
            case 303:
                return Keys::F14;
            case 304:
                return Keys::F15;
            case 305:
                return Keys::F16;
            case 306:
                return Keys::F17;
            case 307:
                return Keys::F18;
            case 308:
                return Keys::F19;
            case 309:
                return Keys::F20;
            case 310:
                return Keys::F21;
            case 311:
                return Keys::F22;
            case 312:
                return Keys::F23;
            case 313:
                return Keys::F24;
            case 314:
                return Keys::F25;
            case 320:
                return Keys::KEYPAD_0;
            case 321:
                return Keys::KEYPAD_1;
            case 322:
                return Keys::KEYPAD_2;
            case 323:
                return Keys::KEYPAD_3;
            case 324:
                return Keys::KEYPAD_4;
            case 325:
                return Keys::KEYPAD_5;
            case 326:
                return Keys::KEYPAD_6;
            case 327:
                return Keys::KEYPAD_7;
            case 328:
                return Keys::KEYPAD_8;
            case 329:
                return Keys::KEYPAD_9;
            case 330:
                return Keys::KEYPAD_DECIMAL;
            case 331:
                return Keys::KEYPAD_DIVIDE;
            case 332:
                return Keys::KEYPAD_MULTIPLY;
            case 333:
                return Keys::KEYPAD_SUBTRACT;
            case 334:
                return Keys::KEYPAD_ADD;
            case 335:
                return Keys::KEYPAD_ENTER;
            case 336:
                return Keys::KEYPAD_EQUAL;
            case 340:
                return Keys::LEFT_SHIFT;
            case 341:
                return Keys::LEFT_CONTROL;
            case 342:
                return Keys::LEFT_ALT;
            case 343:
                return Keys::LEFT_SUPER;
            case 344:
                return Keys::RIGHT_SHIFT;
            case 345:
                return Keys::RIGHT_CONTROL;
            case 346:
                return Keys::RIGHT_ALT;
            case 367:
                return Keys::RIGHT_SUPER;
            case 368:
                return Keys::MENU;
            default:
                return std::nullopt;
        }
    }
} // namespace sero::core::utils
